---
- name: install packages
  package: name={{ item }} state=latest
  with_items:
    - rsync
    - kvm
    - opennebula-node-kvm

- name: configure udev
  action: copy src=80-kvm.rules dest=/etc/udev/rules.d/80-kvm.rules owner=root group=root mode=644
  when: import_node is undefined

- name: configure libvirt
  action: template src=libvirtd.conf.j2 dest=/etc/libvirt/libvirtd.conf 
  notify: restart libvirtd
  when: import_node is undefined

- name: add oneadmin to qemu group for libvirt and ceph auth
  user: name=oneadmin groups=qemu append=yes

- name: add libvirt sasl credentials
  command: echo {{ item.value }} | saslpasswd2 -p -a libvirt {{ item.key }}
  with_dict: "{{ libvirt_sasl }}"
  when:
    - not import_node is undefined 
    - import_node == 'ovirt'

- file: path=/etc/libvirt state=directory group=qemu mode=0750
- name: configure libvirt sasl auto auth
  copy:
    content: "[auth-libvirt-localhost]\ncredentials=opennebula\n\n[credentials-opennebula]\nauthname={{ item.key }}\npassword={{ item.value }}\n\r"
    dest: "/etc/libvirt/auth.conf"
    mode: "0640"
    owner: root
    group: qemu
  with_dict: "{{ libvirt_sasl }}"
  when:
    - not import_node is undefined 
    - import_node == 'ovirt'


- name: add host to known hosts
  command: "ssh-keyscan {{ inventory_hostname }}"
  delegate_to: "{{ mgmt_host }}"
  register: keyscan
- lineinfile: name=/var/lib/one/.ssh/known_hosts create=yes line={{ item }}
  with_items: '{{ keyscan.stdout_lines }}'
  delegate_to: "{{ mgmt_host }}"

- name: synchronize oneadmin ssh keys
  action: synchronize dest=/var/lib/one/.ssh/ src=/var/lib/one/.ssh/ delete=yes
  delegate_to: "{{ mgmt_host }}"

- name: configure ssh authorized keys
  action: authorized_key user=oneadmin key="{{ lookup('file', '/var/lib/one/.ssh/' + item  ) }}"
  with_items:
    - id_rsa.pub

- name: set SELinux label on authorized_keys
  action: file path=/var/lib/one/.ssh/authorized_keys setype=ssh_home_t


- name: clean libvirt default net
  command: "virsh {{ item }} default"
  with_items:
    - "net-destroy"
    - "net-undefine"
  changed_when: false
  failed_when: false

#- virt_net: command=destroy name=default
#- virt_net: command=undefine name=default


# service libvirtd restart
